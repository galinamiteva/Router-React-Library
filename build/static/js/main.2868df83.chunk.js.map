{"version":3,"sources":["components/Book.js","components/Books.js","components/BookInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Book","book","history","useHistory","class","onClick","push","id","style","backgroundColor","color","title","author","Books","useState","books","setBooks","useEffect","booksFromAssets","map","index","BookInfo","useParams","setBook","console","log","foundBook","filter","bookObj","parseInt","href","plot","audience","year","pages","publisher","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yuLAoBeA,MAjBf,YAAyB,IAATC,EAAQ,EAARA,KACNC,EAAUC,cAEhB,OACI,0BAASC,MAAM,OAAOC,QAAS,kBAAMH,EAAQI,KAAR,gBAAsBL,EAAKM,MAAQC,MAAO,CAAEC,gBAAkBR,EAAKS,OAAxG,UACI,yBAASN,MAAM,OACf,0BAASA,MAAM,UAAf,UACI,0BACA,0BAASA,MAAM,QAAf,UACI,6BAAMH,EAAKU,QACX,6BAAMV,EAAKW,mBCahBC,MApBf,WAAkB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KAOb,OAJAC,qBAAU,WACND,EAASE,KACV,IAGC,yBAASd,MAAM,UAAf,SACI,qBAAKA,MAAM,UAAX,SACI,sBAAMA,MAAM,QAAZ,SACMW,EAAMI,KAAI,SAAClB,EAAMmB,GACf,OAAO,cAAC,EAAD,CAAMnB,KAAOA,GAAamB,aC+C1CC,MApDf,WAAoB,IAERd,EAAOe,cAAPf,GACFL,EAAUC,cAHA,EAISW,mBAAS,IAJlB,mBAITb,EAJS,KAIFsB,EAJE,KAkBhB,OAbAC,QAAQC,IAAI,cAAelB,GAE3BU,qBAAU,WACNO,QAAQC,IAAI,SAAUV,GAEtB,IAAMW,EAAYX,EAAMY,QAAO,SAACC,GAC5B,OAAOA,EAAQrB,KAAOsB,SAAStB,MAGnCiB,QAAQC,IAAIC,GACZH,EAAQG,EAAU,MACnB,IAGC,sBAAMtB,MAAM,kBAAZ,SACI,sBAAKA,MAAM,YAAX,UACI,iCACI,mBAAG0B,KAAK,IAAI1B,MAAM,OAAOC,QAAU,kBAAMH,EAAQI,KAAK,MAAtD,sBAEJ,yBAASF,MAAM,UAAf,SACI,0BAASA,MAAM,OAAOI,MAAO,CAAEC,gBAAiBR,EAAKS,OAArD,UACI,yBAASN,MAAM,OACf,0BAASA,MAAM,UAAf,UACI,0BACA,0BAASA,MAAM,QAAf,UACI,6BAAMH,EAAKU,QACX,6BAAMV,EAAKW,oBAK3B,0BAASR,MAAM,OAAf,UACI,6BAAMH,EAAKU,QACX,6BAAMV,EAAKW,SACX,4BAAKX,EAAK8B,OACV,mCACI,8BAAG,0CAAH,IAAsB9B,EAAK+B,YAC3B,8BAAG,iDAAH,IAA6B/B,EAAKgC,QAClC,8BAAG,uCAAH,IAAmBhC,EAAKiC,OAAS,OACjC,8BAAG,2CAAH,IAAuBjC,EAAKkC,yBCpBrCC,MAZf,WAEE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAYzB,EAAQ0B,OAAK,IAGzC,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAYjB,QCpB3BmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2868df83.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Book({ book }) {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <article class=\"book\" onClick={() => history.push(`/info/${book.id}`) } style={{ backgroundColor : book.color }}>\r\n            <section class=\"bg\"></section>\r\n            <section class=\"content\">\r\n                <aside></aside>\r\n                <section class=\"about\">\r\n                    <h2>{ book.title }</h2>\r\n                    <h3>{ book.author }</h3>\r\n                </section>\r\n            </section>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Book;","import React, { useState, useEffect } from 'react';\r\nimport booksFromAssets from '../assets/childrensbooks.json';\r\nimport '../App.css';\r\n\r\nimport Book from './Book';\r\n\r\nfunction Books() {\r\n    const [books, setBooks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setBooks(booksFromAssets);\r\n    }, [])\r\n\r\n    return (\r\n        <section class=\"library\">\r\n            <div class=\"wrapper\">\r\n                <main class=\"books\">\r\n                    { books.map((book, index) => {\r\n                        return <Book book={ book } key={ index } />\r\n                    })}\r\n                </main>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Books;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport books from '../assets/childrensbooks.json';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/**\r\n * 1. Hämta id från url:en exempelvis localhost:3000/info/1 \r\n * 2. Läs in childrensbooks.json\r\n * 3. Filtera ut den bok som motsvarar det ID som finns i url:en\r\n * 4. Visa detaljerad info om bok\r\n */\r\n\r\n\r\nfunction BookInfo() {\r\n    //Hämtar ut vad som finns i url:en efter /info det som i App.js är :id\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [book , setBook] = useState({});\r\n    console.log('useParams: ', id);\r\n\r\n    useEffect(() => {\r\n        console.log('Books ', books);\r\n        //Filtera ut den bok som motsvarar det ID som finns i url:en\r\n        const foundBook = books.filter((bookObj) => {\r\n            return bookObj.id === parseInt(id);\r\n        });\r\n\r\n        console.log(foundBook);\r\n        setBook(foundBook[0]);\r\n    }, [])\r\n\r\n    return (\r\n        <main class=\"background-dark\">\r\n            <div class=\"book-info\">\r\n                <header>\r\n                    <a href=\"#\" class=\"back\" onClick={ () => history.push('/') }>&#8592;</a>\r\n                </header>\r\n                <section class=\"display\">\r\n                    <article class=\"book\" style={{ backgroundColor: book.color }}>\r\n                        <section class=\"bg\"></section>\r\n                        <section class=\"content\">\r\n                            <aside></aside>\r\n                            <section class=\"about\">\r\n                                <h2>{ book.title }</h2>\r\n                                <h3>{ book.author }</h3>\r\n                            </section>\r\n                        </section>\r\n                    </article>\r\n                </section>\r\n                <section class=\"info\">\r\n                    <h1>{ book.title }</h1>\r\n                    <h3>{ book.author }</h3>\r\n                    <p>{ book.plot }</p>\r\n                    <footer>\r\n                        <p><b>Audience:</b> { book.audience }</p>\r\n                        <p><b>First Published:</b> { book.year }</p>\r\n                        <p><b>Pages:</b> { book.pages || '-' }</p>\r\n                        <p><b>Publisher:</b> { book.publisher }</p>\r\n                    </footer>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default BookInfo;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Books from './components/Books';\r\nimport BookInfo from './components/BookInfo';\r\n\r\n/**\r\n * Ny arkitektur med React Router\r\n * App.js - Router med Switch som håller koll på våra routes\r\n * Books.js - Route med path=\"/\". Loopar ut alla böcker från childrensbooks.json\r\n * Book.js - Visar en upp bok som loopas ut från Books.js\r\n * BookInfo.js - Route med path=\"/info\". Visar detaljerad information om vald bok\r\n */\r\n\r\n/**\r\n * Problem att lösa\r\n * Hur får vi den valda boken från Book.js till BookInfo.js\r\n */\r\n\r\n/**\r\n * 1. Importera BookInfo.js i App.js\r\n * 2. Skapa en route för BookInfo med path /info\r\n * 3. När jag klickar på en bok i Book.js så ska jag förflyttas till url:en localhost:3000/info\r\n */\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={ Books } exact />\r\n      {/* :id är en dynamisk parameter där man kan skicka det man önskar exempelvis en siffra \r\n      så url:en blir då /info/1 */}\r\n      <Route path=\"/info/:id\" component={ BookInfo } />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}